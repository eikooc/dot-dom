<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API Reference on .dom Documentation</title><link>wavesoft.github.io/dot-dom/docs/api/</link><description>Recent content in API Reference on .dom Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="wavesoft.github.io/dot-dom/docs/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Globals</title><link>wavesoft.github.io/dot-dom/docs/api/globals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>wavesoft.github.io/dot-dom/docs/api/globals/</guid><description>Globals When sourced, .dom library exposes a few entry point functions for defining and rendering elements.
.H - Create Element H( &amp;#39;tag&amp;#39; ) H( &amp;#39;tag&amp;#39;, {prop: &amp;#34;value&amp;#34;}) H( &amp;#39;tag&amp;#39;, H( &amp;#39;child&amp;#39; )) H( &amp;#39;tag&amp;#39;, {prop: &amp;#34;value&amp;#34;}, H( &amp;#39;child&amp;#39; )) H( Component, {prop: &amp;#34;value&amp;#34;} ) Create and return a new VDom element of the given type. The type argument can be either a tag name string (such as &amp;lsquo;div&amp;rsquo; or &amp;lsquo;span&amp;rsquo;) or a Component function.</description></item><item><title>Component Functions</title><link>wavesoft.github.io/dot-dom/docs/api/component-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>wavesoft.github.io/dot-dom/docs/api/component-functions/</guid><description>Component Functions This page explains in detail the component functions.
Every component function is called during the rendering phase of the DOM and it must return a valid VDom element to render. Any code logic that should be called during a particular lifecycle event of the node should be registered via the hooks object.
function Component(props, state, setState, hooks) { return ... } props : The properties object, as given by the user in the H function state : An object that contains the state values of the object setState : A function that can be used to update the state and re-render the element hooks : An object where you can register the lifecycle method hooks Note that the state object instance remains untouched throughout the life-cycle of the component.</description></item></channel></rss>